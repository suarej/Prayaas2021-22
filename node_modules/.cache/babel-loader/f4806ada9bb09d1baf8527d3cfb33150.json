{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/sshelke/Desktop/demoPrayaas/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2,_templateObject3;import React from\"react\";import styled from\"styled-components\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var BaseButton=styled.button(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n    \",\";\\n\"])),{\"paddingLeft\":\"1.25rem\",\"paddingRight\":\"1.25rem\",\"paddingTop\":\"0.75rem\",\"paddingBottom\":\"0.75rem\",\"outline\":\"2px solid transparent\",\"outlineOffset\":\"2px\",\"borderRadius\":\"0.375rem\",\"--tw-text-opacity\":\"1\",\"color\":\"rgba(255, 255, 255, var(--tw-text-opacity))\",\"fontSize\":\"0.75rem\",\"lineHeight\":\"1rem\",\"fontWeight\":\"600\",\"borderColor\":\"rgba(0, 0, 0, 0)\",\"borderWidth\":\"2px\",\"borderStyle\":\"solid\",\"transitionProperty\":\"all\",\"transitionTimingFunction\":\"cubic-bezier(0.4, 0, 0.2, 1)\",\"transitionDuration\":\"200ms\",\"margin\":\"0.25rem\"});var OutlinedButton=styled(BaseButton)(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n\",\";\\n\"])),{\"--tw-bg-opacity\":\"1\",\"backgroundColor\":\"rgba(239, 68, 68, var(--tw-bg-opacity))\",\":hover\":{\"backgroundColor\":\"rgba(0, 0, 0, 0)\",\"--tw-text-opacity\":\"1\",\"color\":\"rgba(239, 68, 68, var(--tw-text-opacity))\",\"--tw-border-opacity\":\"1\",\"borderColor\":\"rgba(239, 68, 68, var(--tw-border-opacity))\"}});var FilledButton=styled(BaseButton)(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n    \",\";\\n\"])),{\"--tw-border-opacity\":\"1\",\"borderColor\":\"rgba(239, 68, 68, var(--tw-border-opacity))\",\"--tw-text-opacity\":\"1\",\"color\":\"rgba(239, 68, 68, var(--tw-text-opacity))\",\"backgroundColor\":\"rgba(0, 0, 0, 0)\",\":hover\":{\"--tw-bg-opacity\":\"1\",\"backgroundColor\":\"rgba(239, 68, 68, var(--tw-bg-opacity))\",\"--tw-text-opacity\":\"1\",\"color\":\"rgba(255, 255, 255, var(--tw-text-opacity))\",\"borderColor\":\"rgba(0, 0, 0, 0)\"}});export function Button(props){var theme=props.theme,text=props.text,className=props.className;if(theme===\"filled\")return/*#__PURE__*/_jsxs(FilledButton,{className:className,children:[\" \",text,\" \"]});else return/*#__PURE__*/_jsxs(OutlinedButton,{className:className,children:[\" \",text,\" \"]});}","map":{"version":3,"sources":["/Users/sshelke/Desktop/demoPrayaas/src/app/components/button/index.tsx"],"names":["React","styled","BaseButton","button","OutlinedButton","FilledButton","Button","props","theme","text","className"],"mappings":"+NAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,C,6CASA,GAAMC,CAAAA,UAAU,CAAGD,MAAM,CAACE,MAAV,6EACR,+gBADQ,CAAhB,CAsBA,GAAMC,CAAAA,cAAc,CAAGH,MAAM,CAACC,UAAD,CAAT,2EAChB,qSADgB,CAApB,CAUA,GAAMG,CAAAA,YAAY,CAAGJ,MAAM,CAACC,UAAD,CAAT,+EACV,oZADU,CAAlB,CAWA,MAAO,SAASI,CAAAA,MAAT,CAAiBC,KAAjB,CAAsC,CACzC,GAAOC,CAAAA,KAAP,CAAiCD,KAAjC,CAAOC,KAAP,CAAcC,IAAd,CAAiCF,KAAjC,CAAcE,IAAd,CAAoBC,SAApB,CAAiCH,KAAjC,CAAoBG,SAApB,CAEA,GAAGF,KAAK,GAAK,QAAb,CAAuB,mBAAO,MAAC,YAAD,EAAc,SAAS,CAAEE,SAAzB,eAAsCD,IAAtC,OAAP,CAAvB,IACK,oBAAO,MAAC,cAAD,EAAgB,SAAS,CAAEC,SAA3B,eAAwCD,IAAxC,OAAP,CAER","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport tw from \"twin.macro\";\n\ninterface IButtonProps {\n    theme?: \"filled\" | \"outlined\";\n    text: string;\n    className?: string;\n}\n\nconst BaseButton = styled.button`\n    ${tw`\n        pl-5\n        pr-5\n        pt-3\n        pb-3\n        outline-none\n        rounded-md\n        text-white\n        text-xs\n        font-semibold\n        border-transparent\n        border-2\n        border-solid\n        focus: outline-none\n        transition-all\n        duration-200\n        ease-in-out\n        m-1\n    `};\n`;\n\nconst OutlinedButton = styled(BaseButton)`\n${tw`\n    bg-red-500\n\n    hover:bg-transparent\n    hover:text-red-500\n    hover:border-red-500\n    `};\n`;\n\nconst FilledButton = styled(BaseButton)`\n    ${tw`\n    border-red-500\n    text-red-500\n    bg-transparent\n    hover:bg-red-500\n    hover:text-white\n    hover:border-transparent\n`};\n`;\n\nexport function Button (props: IButtonProps) {\n    const {theme, text, className} = props;\n\n    if(theme === \"filled\") return <FilledButton className={className}> {text} </FilledButton>\n    else return <OutlinedButton className={className}> {text} </OutlinedButton>\n\n}"]},"metadata":{},"sourceType":"module"}